{
  "apiVersion" : "1",
  "swaggerVersion" : "1.2",
  "basePath" : "https://square.github.io/keywhiz/apidocs",
  "resourcePath" : "/enroll-secrets-automation",
  "apis" : [ {
    "path" : "/automation/secrets/{secretId}/groups/{groupId}",
    "operations" : [ {
      "method" : "PUT",
      "nickname" : "allowAccess",
      "type" : "Response",
      "parameters" : [ {
        "type" : "LongParam",
        "description" : "the ID of the Secret to assign",
        "paramType" : "path",
        "name" : "secretId",
        "required" : true
      }, {
        "type" : "LongParam",
        "description" : "the ID of the Group to be assigned to",
        "paramType" : "path",
        "name" : "groupId",
        "required" : true
      } ],
      "summary" : "Assign Secret to Group",
      "notes" : "Assigns the Secret specified by the secretID to the Group specified by the groupID",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Successfully enrolled Secret in Group"
      }, {
        "code" : 404,
        "message" : "Could not find Secret or Group"
      } ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "disallowAccess",
      "type" : "Response",
      "parameters" : [ {
        "type" : "LongParam",
        "description" : "the ID of the Secret to unassign",
        "paramType" : "path",
        "name" : "secretId",
        "required" : true
      }, {
        "type" : "LongParam",
        "description" : "the ID of the Group to be removed from",
        "paramType" : "path",
        "name" : "groupId",
        "required" : true
      } ],
      "summary" : "Remove Secret from Group",
      "notes" : "Unassigns the Secret specified by the secretID from the Group specified by the groupID",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Successfully removed Secret from Group"
      }, {
        "code" : 404,
        "message" : "Could not find Secret or Group"
      } ],
      "produces" : [ "application/json" ]
    } ]
  } ],
  "models" : {
    "LongParam" : {
      "id" : "LongParam",
      "properties" : {
        "value" : {
          "type" : "T"
        },
        "errorStatus" : {
          "type" : "string",
          "enum" : [ "OK", "CREATED", "ACCEPTED", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED" ]
        }
      }
    }
  }
}